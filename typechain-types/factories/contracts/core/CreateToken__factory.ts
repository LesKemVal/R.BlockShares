/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CreateToken,
  CreateTokenInterface,
} from "../../../contracts/core/CreateToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_mintable",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "_burnable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_buyTaxBps",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellTaxBps",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_taxCollector",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "burnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTaxBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellTaxBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "taxCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523461055a57611890803803806100198161055f565b9283398101906101a08183031261055a5780516001600160401b03811161055a5782610046918301610584565b602082015190926001600160401b03821161055a57610066918301610584565b610072604083016105ef565b6060830151610083608085016105ef565b5061009060a085016105ef565b5060c08401516100a260e086016105fd565b926100b061010087016105fd565b926100be610120880161060a565b610140880151966100d86101806101608b01519a0161060a565b8a51909a6001600160401b0382116104575760035490600182811c92168015610550575b60208310146104375781601f8493116104e0575b50602090601f83116001146104785760009261046d575b50508160011b916000199060031b1c1916176003555b8051906001600160401b0382116104575760045490600182811c9216801561044d575b60208310146104375781601f8493116103c7575b50602090601f831160011461035f57600092610354575b50508160011b916000199060031b1c1916176004555b6101aa3361061e565b600554336001600160a01b0390911603610310576001600160a01b0381169283156102bc576101da60ff9261061e565b16604d81116102a657600a0a908181029181830414901517156102a6576000906002548181018091116102925760025582825260208281526040808420805484019055519182527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a360065560ff61ff0060075492151560081b16921515169061ffff1916171760075560085560095560018060a01b031660018060a01b0319600a541617600a5560405161122890816106688239f35b634e487b7160e01b83526011600452602483fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b01519050388061018b565b600460009081528281209350601f198516905b8181106103af5750908460019594939210610396575b505050811b016004556101a1565b015160001960f88460031b161c19169055388080610388565b92936020600181928786015181550195019301610372565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c8101916020851061042d575b90601f859493920160051c01905b81811061041e5750610174565b60008155849350600101610411565b9091508190610403565b634e487b7160e01b600052602260045260246000fd5b91607f1691610160565b634e487b7160e01b600052604160045260246000fd5b015190503880610127565b600360009081528281209350601f198516905b8181106104c857509084600195949392106104af575b505050811b0160035561013d565b015160001960f88460031b161c191690553880806104a1565b9293602060018192878601518155019501930161048b565b60036000529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c81019160208510610546575b90601f859493920160051c01905b8181106105375750610110565b6000815584935060010161052a565b909150819061051c565b91607f16916100fc565b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761045757604052565b81601f8201121561055a578051906001600160401b038211610457576105b3601f8301601f191660200161055f565b928284526020838301011161055a5760005b8281106105da57505060206000918301015290565b806020809284010151828287010152016105c5565b519060ff8216820361055a57565b5190811515820361055a57565b51906001600160a01b038216820361055a57565b600580546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde0314610bc157508063095ea7b314610b9b57806318160ddd14610b7d57806323b872dd14610a7e578063313ce56714610a625780633950935114610a0257806340c10f191461088757806342966c68146106e95780634bf365df146106c657806370a082311461067f578063715018a6146105ff5780638da5cb5b146105cb57806395d89b4114610448578063a07c7ce414610422578063a457c2d714610356578063a9059cbb14610325578063bea1dcf8146102f1578063c473413a146102d3578063cffd129c146102b5578063d5abeb0114610297578063dd62ed3e146102255763f2fde38b1461011157600080fd5b346102205760206003193601126102205773ffffffffffffffffffffffffffffffffffffffff61013f610ce8565b610147610fae565b1680156101b65773ffffffffffffffffffffffffffffffffffffffff600554827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b608460405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b600080fd5b346102205760406003193601126102205761023e610ce8565b73ffffffffffffffffffffffffffffffffffffffff61025b610d0b565b9116600052600160205273ffffffffffffffffffffffffffffffffffffffff604060002091166000526020526020604060002054604051908152f35b34610220576000600319360112610220576020600654604051908152f35b34610220576000600319360112610220576020600954604051908152f35b34610220576000600319360112610220576020600854604051908152f35b3461022057600060031936011261022057602073ffffffffffffffffffffffffffffffffffffffff600a5416604051908152f35b346102205760406003193601126102205761034b610341610ce8565b6024359033610ed1565b602060405160018152f35b346102205760406003193601126102205761036f610ce8565b60243590336000526001602052604060002073ffffffffffffffffffffffffffffffffffffffff8216600052602052604060002054918083106103b85761034b92039033610d6a565b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b3461022057600060031936011261022057602060ff60075460081c166040519015158152f35b3461022057600060031936011261022057604051600090600454918260011c600184169384156105c1575b602082108514610594578394828552908160001461055257506001146104f5575b5003601f01601f191681019067ffffffffffffffff8211818310176104c6576104c282918260405282610c9e565b0390f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6004600090815291507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8183106105365750508101602001601f19610494565b6020919350806001915483858801015201910190918392610520565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660208581019190915291151560051b84019091019150601f199050610494565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b90607f1690610473565b3461022057600060031936011261022057602073ffffffffffffffffffffffffffffffffffffffff60055416604051908152f35b3461022057600060031936011261022057610618610fae565b600073ffffffffffffffffffffffffffffffffffffffff6005547fffffffffffffffffffffffff00000000000000000000000000000000000000008116600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102205760206003193601126102205773ffffffffffffffffffffffffffffffffffffffff6106ad610ce8565b1660005260006020526020604060002054604051908152f35b3461022057600060031936011261022057602060ff600754166040519015158152f35b346102205760206003193601126102205760043560ff60075460081c16156108435733156107d9573360005260006020526040600020549080821061076f57806000923384528360205203604083205580600254036002556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3005b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b606460405162461bcd60e51b815260206004820152601360248201527f4275726e696e672069732064697361626c6564000000000000000000000000006044820152fd5b34610220576040600319360112610220576108a0610ce8565b602435906108ac610fae565b60ff60075416156109be57600254906108c58383610d2e565b6006541061097a5773ffffffffffffffffffffffffffffffffffffffff169182156109365760208161091a7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93600095610d2e565b60025584845283825260408420818154019055604051908152a3005b606460405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b606460405162461bcd60e51b815260206004820152601260248201527f45786365656473206d617820737570706c7900000000000000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152601360248201527f4d696e74696e672069732064697361626c6564000000000000000000000000006044820152fd5b346102205760406003193601126102205761034b610a1e610ce8565b336000526001602052604060002073ffffffffffffffffffffffffffffffffffffffff8216600052602052610a5b60406000206024359054610d2e565b9033610d6a565b3461022057600060031936011261022057602060405160128152f35b3461022057606060031936011261022057610a97610ce8565b610a9f610d0b565b6044359073ffffffffffffffffffffffffffffffffffffffff83166000526001602052604060002073ffffffffffffffffffffffffffffffffffffffff3316600052602052604060002054927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8403610b1d575b61034b9350610ed1565b828410610b3957610b348361034b95033383610d6a565b610b13565b606460405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b34610220576000600319360112610220576020600254604051908152f35b346102205760406003193601126102205761034b610bb7610ce8565b6024359033610d6a565b3461022057600060031936011261022057600090600354918260011c60018416938415610c94575b60208210851461059457839482855290816000146105525750600114610c37575003601f01601f191681019067ffffffffffffffff8211818310176104c6576104c282918260405282610c9e565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b818310610c785750508101602001601f19610494565b6020919350806001915483858801015201910190918392610c62565b90607f1690610be9565b9190916020815282519283602083015260005b848110610cd2575050601f19601f8460006040809697860101520116010190565b8060208092840101516040828601015201610cb1565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361022057565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361022057565b91908201809211610d3b57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff16908115610e555773ffffffffffffffffffffffffffffffffffffffff16918215610deb5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b608460405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b81810292918115918404141715610d3b57565b9190600073ffffffffffffffffffffffffffffffffffffffff600a5416908173ffffffffffffffffffffffffffffffffffffffff84161480610fa3575b15610f5b5750612710610f2360095485610ebe565b04905b81610f39575b5050610f3792611013565b565b81610f4691869596611013565b8303928311610d3b57610f3792919238610f2c565b908073ffffffffffffffffffffffffffffffffffffffff86161480610f98575b15610f26579050612710610f9160085485610ebe565b0490610f26565b506008541515610f7b565b506009541515610f0e565b73ffffffffffffffffffffffffffffffffffffffff600554163303610fcf57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b73ffffffffffffffffffffffffffffffffffffffff169081156111885773ffffffffffffffffffffffffffffffffffffffff1691821561111e578160005260006020526040600020548181106110b457817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209285600052600084520360406000205584600052600082526040600020818154019055604051908152a3565b608460405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b608460405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fdfea26469706673582212207e989b42191f7826a48ad280651d719fd8780c949e4302ba82fa019956d6807264736f6c634300081c0033";

type CreateTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreateTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreateToken__factory extends ContractFactory {
  constructor(...args: CreateTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    initialSupply: BigNumberish,
    arg4: BigNumberish,
    arg5: BigNumberish,
    _maxSupply: BigNumberish,
    _mintable: boolean,
    _burnable: boolean,
    creator: AddressLike,
    _buyTaxBps: BigNumberish,
    _sellTaxBps: BigNumberish,
    _taxCollector: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      decimals_,
      initialSupply,
      arg4,
      arg5,
      _maxSupply,
      _mintable,
      _burnable,
      creator,
      _buyTaxBps,
      _sellTaxBps,
      _taxCollector,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    decimals_: BigNumberish,
    initialSupply: BigNumberish,
    arg4: BigNumberish,
    arg5: BigNumberish,
    _maxSupply: BigNumberish,
    _mintable: boolean,
    _burnable: boolean,
    creator: AddressLike,
    _buyTaxBps: BigNumberish,
    _sellTaxBps: BigNumberish,
    _taxCollector: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      decimals_,
      initialSupply,
      arg4,
      arg5,
      _maxSupply,
      _mintable,
      _burnable,
      creator,
      _buyTaxBps,
      _sellTaxBps,
      _taxCollector,
      overrides || {}
    ) as Promise<
      CreateToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CreateToken__factory {
    return super.connect(runner) as CreateToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreateTokenInterface {
    return new Interface(_abi) as CreateTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CreateToken {
    return new Contract(address, _abi, runner) as unknown as CreateToken;
  }
}
