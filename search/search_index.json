{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udcd8 Business Franchise Token (BFTKN) A Kore-compliant ERC-20 token designed for business franchise ownership, investor participation, and regulatory control. \ud83d\udd0d Token Information Token Name: FranchiseToken Symbol: FTKN Contract Address: 0x5FbDB2315678afecb367f032d93F642f64180aa3 Deployed on: Sepolia Testnet Funding Window: Start: 2025-07-21 End: 2025-08-20 \ud83d\udd17 Resources Smart Contract Repository Kore Compliance View Contract on Sepolia Etherscan \ud83d\udcc4 License This project is licensed under the MIT License .","title":"Home"},{"location":"#business-franchise-token-bftkn","text":"A Kore-compliant ERC-20 token designed for business franchise ownership, investor participation, and regulatory control.","title":"\ud83d\udcd8 Business Franchise Token (BFTKN)"},{"location":"#token-information","text":"Token Name: FranchiseToken Symbol: FTKN Contract Address: 0x5FbDB2315678afecb367f032d93F642f64180aa3 Deployed on: Sepolia Testnet Funding Window: Start: 2025-07-21 End: 2025-08-20","title":"\ud83d\udd0d Token Information"},{"location":"#resources","text":"Smart Contract Repository Kore Compliance View Contract on Sepolia Etherscan","title":"\ud83d\udd17 Resources"},{"location":"#license","text":"This project is licensed under the MIT License .","title":"\ud83d\udcc4 License"},{"location":"basic-usage/","text":"Basic Usage Build You can either use Forge: bunx settlemint scs foundry build or Hardhat: bunx settlemint scs hardhat build Test With Forge: bunx settlemint scs foundry test or Hardhat: bunx settlemint scs hardhat test Format To format your contracts, run bunx settlemint scs foundry format Deploy to local network You can deploy your contracts to a local network. First, run bunx settlemint scs hardhat network then: bunx settlemint scs hardhat deploy local -m ignition/modules/main.ts Deploy to platform network To deploy your contracts to the platform network, first log in using the SDK: bunx settlemint login You only need to run this login command once. Then, you can deploy your contracts using the following command: bunx settlemint scs hardhat deploy remote -m ignition/modules/main.ts Help To get info about the tasks, run: bunx settlemint scs --help","title":"Basic Usage"},{"location":"basic-usage/#basic-usage","text":"","title":"Basic Usage"},{"location":"basic-usage/#build","text":"You can either use Forge: bunx settlemint scs foundry build or Hardhat: bunx settlemint scs hardhat build","title":"Build"},{"location":"basic-usage/#test","text":"With Forge: bunx settlemint scs foundry test or Hardhat: bunx settlemint scs hardhat test","title":"Test"},{"location":"basic-usage/#format","text":"To format your contracts, run bunx settlemint scs foundry format","title":"Format"},{"location":"basic-usage/#deploy-to-local-network","text":"You can deploy your contracts to a local network. First, run bunx settlemint scs hardhat network then: bunx settlemint scs hardhat deploy local -m ignition/modules/main.ts","title":"Deploy to local network"},{"location":"basic-usage/#deploy-to-platform-network","text":"To deploy your contracts to the platform network, first log in using the SDK: bunx settlemint login You only need to run this login command once. Then, you can deploy your contracts using the following command: bunx settlemint scs hardhat deploy remote -m ignition/modules/main.ts","title":"Deploy to platform network"},{"location":"basic-usage/#help","text":"To get info about the tasks, run: bunx settlemint scs --help","title":"Help"},{"location":"bd-north-capital-brief/","text":"R. Block Nation \u2014 North Capital Brief Owner: Lester Sawyer Company: R. Block Share Holdings, LLC (owns 100% of R. Block Nation) Stage: Reg CF validation using OBN (equity (Class B) token), scaling to Reg A+ and Reg D Partnership Ask (Success-Fee) Broker-Dealer + Escrow + Compliance under a no upfront / success-fee model for Reg CF. If successful, extend partnership to Reg A+ and Reg D . Ultimately we will market to non-traditional investors and communities of color, along with all qualified issuers and investors. Why North Capital Single partner for BD, escrow, KYC/AML, and funds flow. Reduce friction for issuers and investors with bundled services. Keep compliance controls consistent across CF \u2192 A+ \u2192 D. Tech Readiness Snapshot Smart Contracts: Reg CF Token (OBN) \u2014 (configurable), 12-month lock, weekly pro-rata revenue distribution, KYC/AML hooks. BusinessFranchiseToken (BFTKN) \u2014 role-based access (Owner/Admin/KoreOperator), funding window enforcement, whitelist minting with fees, escrow wallet integration, optional toggle. Networks: Ethereum; Sepolia for test deployments. Tooling: Hardhat + Foundry, TypeScript deploy scripts, GitHub Actions CI, MkDocs docs. Latest Test Deployments: Reg CF Token (OBN) confirmed at: 0x669c723635EF929c8878E5cC0625ac9859a36d03 (Sepolia test) Local & CI passing: build + tests + gas report. Compliance & Onboarding (Integration Points) KYC/AML : Pre-mint whitelist via BD/Kore endpoints \u2192 emits WhitelistUpdated(address, allowed) event. Escrow Flow : Investor funds \u2192 North Capital escrow \u2192 on settlement, mint/release via admin/KoreOperator. Lockups (Reg CF) : Auto-enforced 12 months via contract logic; transfer restrictions during lock. Revenue Distribution : Weekly, pro-rata to holders with on-chain claim or admin sweep (gas-optimized). Reporting : Webhooks/callbacks emit tx hashes + off-chain receipts for audit and investor comms. Success Criteria Close the Reg CF under a success-fee structure. Stable investor KYC/AML and escrow flow. Repeatable playbook for Reg A+ / Reg D issuers. Clear, auditable data across chain + BD systems. Next Steps (Proposed) Intro Call (30\u201345 min): Confirm success-fee feasibility and bundled scope. Sandbox Integration: Wire KYC/AML + escrow test flows against Sepolia. Pilot Issuer: Run one CF pilot end-to-end; measure conversion + ops effort. Scale Plan: Timeline and SLAs for A+ and D. Prepared for discussion. Contact: Lester Sawyer \u2014 contact@rblockshares.com","title":"North Capital Brief"},{"location":"bd-north-capital-brief/#r-block-nation-north-capital-brief","text":"Owner: Lester Sawyer Company: R. Block Share Holdings, LLC (owns 100% of R. Block Nation) Stage: Reg CF validation using OBN (equity (Class B) token), scaling to Reg A+ and Reg D","title":"R. Block Nation \u2014 North Capital Brief"},{"location":"bd-north-capital-brief/#partnership-ask-success-fee","text":"Broker-Dealer + Escrow + Compliance under a no upfront / success-fee model for Reg CF. If successful, extend partnership to Reg A+ and Reg D . Ultimately we will market to non-traditional investors and communities of color, along with all qualified issuers and investors.","title":"Partnership Ask (Success-Fee)"},{"location":"bd-north-capital-brief/#why-north-capital","text":"Single partner for BD, escrow, KYC/AML, and funds flow. Reduce friction for issuers and investors with bundled services. Keep compliance controls consistent across CF \u2192 A+ \u2192 D.","title":"Why North Capital"},{"location":"bd-north-capital-brief/#tech-readiness-snapshot","text":"Smart Contracts: Reg CF Token (OBN) \u2014 (configurable), 12-month lock, weekly pro-rata revenue distribution, KYC/AML hooks. BusinessFranchiseToken (BFTKN) \u2014 role-based access (Owner/Admin/KoreOperator), funding window enforcement, whitelist minting with fees, escrow wallet integration, optional toggle. Networks: Ethereum; Sepolia for test deployments. Tooling: Hardhat + Foundry, TypeScript deploy scripts, GitHub Actions CI, MkDocs docs. Latest Test Deployments: Reg CF Token (OBN) confirmed at: 0x669c723635EF929c8878E5cC0625ac9859a36d03 (Sepolia test) Local & CI passing: build + tests + gas report.","title":"Tech Readiness Snapshot"},{"location":"bd-north-capital-brief/#compliance-onboarding-integration-points","text":"KYC/AML : Pre-mint whitelist via BD/Kore endpoints \u2192 emits WhitelistUpdated(address, allowed) event. Escrow Flow : Investor funds \u2192 North Capital escrow \u2192 on settlement, mint/release via admin/KoreOperator. Lockups (Reg CF) : Auto-enforced 12 months via contract logic; transfer restrictions during lock. Revenue Distribution : Weekly, pro-rata to holders with on-chain claim or admin sweep (gas-optimized). Reporting : Webhooks/callbacks emit tx hashes + off-chain receipts for audit and investor comms.","title":"Compliance &amp; Onboarding (Integration Points)"},{"location":"bd-north-capital-brief/#success-criteria","text":"Close the Reg CF under a success-fee structure. Stable investor KYC/AML and escrow flow. Repeatable playbook for Reg A+ / Reg D issuers. Clear, auditable data across chain + BD systems.","title":"Success Criteria"},{"location":"bd-north-capital-brief/#next-steps-proposed","text":"Intro Call (30\u201345 min): Confirm success-fee feasibility and bundled scope. Sandbox Integration: Wire KYC/AML + escrow test flows against Sepolia. Pilot Issuer: Run one CF pilot end-to-end; measure conversion + ops effort. Scale Plan: Timeline and SLAs for A+ and D. Prepared for discussion. Contact: Lester Sawyer \u2014 contact@rblockshares.com","title":"Next Steps (Proposed)"},{"location":"kore-brief/","text":"R. Block Nation \u2014 Kore Integration Brief Owner: Lester Sawyer (R. Block Share Holdings, LLC) Scope: Start with Reg CF (OBN) under a success-fee model; extend to Reg A+ and Reg D (BFTKN). Goal: Use Kore for KYC/AML, escrow/settlement, and transfer-agent services; keep SettleMint as backend; maintain a clean path to an embedded first-party UI later. 1) Purpose & Ask Ask: Kore sandbox access + API endpoints (KYC/AML, escrow/settlement webhooks, TA updates) to wire a working CF demo. Commercial: No-upfront, success-fee for Reg CF, with path to A+ and D. Timeline: Sandbox demo \u2192 pilot issuer \u2192 scale. 2) Operating Model & UI Options Option A \u2014 Hosted (fastest path) - Investor onboarding, docs, and payments happen in Kore\u2019s hosted portal . - Our site deep-links to Kore and listens for webhooks to trigger on-chain updates. Option B \u2014 Embedded (brand-first, later) - Use SettleMint\u2019s Asset Tokenization Kit (Next.js/Tailwind) and call Kore APIs from our backend. - Same webhook \u2192 on-chain pattern; full first-party UX control. 3) Technical Snapshot Chain & Code - Network: Ethereum (Sepolia for demo) - Contracts: - RBCB (Reg CF) \u2013 equity (Class B) demo with 12-month lock and . - BFTKN (A+/D) \u2013 role-gated (Owner/Admin/ KoreOperator ), funding window, whitelist minting, optional . - Tooling: Hardhat + Foundry , GitHub Actions CI, MkDocs docs. Public references - Verified OBN (Sepolia): https://sepolia.etherscan.io/address/0x769780C2BA4492Ac4B0C3C38fbD0B2CB4bb9Ba5f#code - Repo (contracts/tests/CI): https://github.com/LesKemVal/R.BlockShares - Partner docs (ZIP): - Partner docs (Transfer): https://www.dropbox.com/t/lVexN5iA8HqklaJ5 https://www.dropbox.com/scl/fi/03hu6guqq490wh0w0mloy/site-partner.zip?rlkey=uepzezsqr5300tzhjzbeijbfn&st=7706jtao&dl=0 4) Integration Hooks (Webhooks \u2192 On-Chain) Webhook from Kore \u2192 our backend { \"event\": \"escrow.settled\", \"investorAddress\": \"0xINVESTOR...\", \"amount\": \"500.00\", \"currency\": \"USD\", \"offchainRef\": \"kore-escrow-123\", \"timestamp\": \"2025-08-20T15:04:05Z\" } Our backend \u2192 contract actions Allowlist (BFTKN) \u2014 Mark address approved before mint/transfer: event WhitelistUpdated(address indexed investor, bool allowed); // function setWhitelisted(address investor, bool allowed) external; Mint / Release (BFTKN) \u2014 Operator mints post-settlement or releases escrowed tokens. Lockup (Reg CF) \u2014 12-month transfer lock enforced by the contract. The demo OBN shows end-to-end flow and lockup. For production CF, either gate buys by allowlist or use an operator-mint pattern after escrow settles. 5) Sandbox Plan (CF demo) KYC/AML pass \u2192 webhook kyc.approved . Escrow settle (test funds) \u2192 webhook escrow.settled with offchainRef . Backend performs allowlist/mint and logs a tx-ref . Audit log (CSV/JSON) aligns offchainRef with txHash . tx-ref shape { \"provider\": \"Kore\", \"ref\": \"kore-escrow-123\", \"event\": \"mint\", \"txHash\": \"0xabc...\", \"ts\": \"2025-08-20T15:10:00Z\", \"investor\": \"0xINV...\", \"amount\": \"500e18\" } 6) Data & Reporting Events: on-chain ( WhitelistUpdated , Transfer , etc.) + off-chain webhooks. Exports: CSV/JSON for Kore/BD ops and auditors. Traceability: 1:1 link \u2014 offchainRef \u2194 txHash . 7) Security & Compliance Keys: ENV only; no secrets in repo. Separation of duties: dedicated ops wallet ( ADMIN_ROLE ) is separate from owner. Pauses/Windows: funding windows and, where applicable, pause/role gates. CF lockup: 12-month per-address enforcement. 8) Success Criteria CF sandbox completes with allowlist/mint after escrow settle . Clean, reproducible run book for pilot issuer. Agreement on Hosted now ; Embedded roadmap later. Success-fee structure confirmed. 9) Next Steps Share Kore sandbox/API docs (KYC/escrow/TA). Map webhook fields to contract calls (finalize allowlist/mint for CF). Schedule 30-min integration call \u2192 sandbox test. Convert demo to pilot . Contact: Lester Sawyer \u2014 contact@rblockshareholdings.com Partner docs (Dropbox Transfer): https://www.dropbox.com/t/lVexN5iA8HqklaJ5","title":"Kore Integration Brief"},{"location":"kore-brief/#r-block-nation-kore-integration-brief","text":"Owner: Lester Sawyer (R. Block Share Holdings, LLC) Scope: Start with Reg CF (OBN) under a success-fee model; extend to Reg A+ and Reg D (BFTKN). Goal: Use Kore for KYC/AML, escrow/settlement, and transfer-agent services; keep SettleMint as backend; maintain a clean path to an embedded first-party UI later.","title":"R. Block Nation \u2014 Kore Integration Brief"},{"location":"kore-brief/#1-purpose-ask","text":"Ask: Kore sandbox access + API endpoints (KYC/AML, escrow/settlement webhooks, TA updates) to wire a working CF demo. Commercial: No-upfront, success-fee for Reg CF, with path to A+ and D. Timeline: Sandbox demo \u2192 pilot issuer \u2192 scale.","title":"1) Purpose &amp; Ask"},{"location":"kore-brief/#2-operating-model-ui-options","text":"Option A \u2014 Hosted (fastest path) - Investor onboarding, docs, and payments happen in Kore\u2019s hosted portal . - Our site deep-links to Kore and listens for webhooks to trigger on-chain updates. Option B \u2014 Embedded (brand-first, later) - Use SettleMint\u2019s Asset Tokenization Kit (Next.js/Tailwind) and call Kore APIs from our backend. - Same webhook \u2192 on-chain pattern; full first-party UX control.","title":"2) Operating Model &amp; UI Options"},{"location":"kore-brief/#3-technical-snapshot","text":"Chain & Code - Network: Ethereum (Sepolia for demo) - Contracts: - RBCB (Reg CF) \u2013 equity (Class B) demo with 12-month lock and . - BFTKN (A+/D) \u2013 role-gated (Owner/Admin/ KoreOperator ), funding window, whitelist minting, optional . - Tooling: Hardhat + Foundry , GitHub Actions CI, MkDocs docs. Public references - Verified OBN (Sepolia): https://sepolia.etherscan.io/address/0x769780C2BA4492Ac4B0C3C38fbD0B2CB4bb9Ba5f#code - Repo (contracts/tests/CI): https://github.com/LesKemVal/R.BlockShares - Partner docs (ZIP): - Partner docs (Transfer): https://www.dropbox.com/t/lVexN5iA8HqklaJ5 https://www.dropbox.com/scl/fi/03hu6guqq490wh0w0mloy/site-partner.zip?rlkey=uepzezsqr5300tzhjzbeijbfn&st=7706jtao&dl=0","title":"3) Technical Snapshot"},{"location":"kore-brief/#4-integration-hooks-webhooks-on-chain","text":"Webhook from Kore \u2192 our backend { \"event\": \"escrow.settled\", \"investorAddress\": \"0xINVESTOR...\", \"amount\": \"500.00\", \"currency\": \"USD\", \"offchainRef\": \"kore-escrow-123\", \"timestamp\": \"2025-08-20T15:04:05Z\" } Our backend \u2192 contract actions Allowlist (BFTKN) \u2014 Mark address approved before mint/transfer: event WhitelistUpdated(address indexed investor, bool allowed); // function setWhitelisted(address investor, bool allowed) external; Mint / Release (BFTKN) \u2014 Operator mints post-settlement or releases escrowed tokens. Lockup (Reg CF) \u2014 12-month transfer lock enforced by the contract. The demo OBN shows end-to-end flow and lockup. For production CF, either gate buys by allowlist or use an operator-mint pattern after escrow settles.","title":"4) Integration Hooks (Webhooks \u2192 On-Chain)"},{"location":"kore-brief/#5-sandbox-plan-cf-demo","text":"KYC/AML pass \u2192 webhook kyc.approved . Escrow settle (test funds) \u2192 webhook escrow.settled with offchainRef . Backend performs allowlist/mint and logs a tx-ref . Audit log (CSV/JSON) aligns offchainRef with txHash . tx-ref shape { \"provider\": \"Kore\", \"ref\": \"kore-escrow-123\", \"event\": \"mint\", \"txHash\": \"0xabc...\", \"ts\": \"2025-08-20T15:10:00Z\", \"investor\": \"0xINV...\", \"amount\": \"500e18\" }","title":"5) Sandbox Plan (CF demo)"},{"location":"kore-brief/#6-data-reporting","text":"Events: on-chain ( WhitelistUpdated , Transfer , etc.) + off-chain webhooks. Exports: CSV/JSON for Kore/BD ops and auditors. Traceability: 1:1 link \u2014 offchainRef \u2194 txHash .","title":"6) Data &amp; Reporting"},{"location":"kore-brief/#7-security-compliance","text":"Keys: ENV only; no secrets in repo. Separation of duties: dedicated ops wallet ( ADMIN_ROLE ) is separate from owner. Pauses/Windows: funding windows and, where applicable, pause/role gates. CF lockup: 12-month per-address enforcement.","title":"7) Security &amp; Compliance"},{"location":"kore-brief/#8-success-criteria","text":"CF sandbox completes with allowlist/mint after escrow settle . Clean, reproducible run book for pilot issuer. Agreement on Hosted now ; Embedded roadmap later. Success-fee structure confirmed.","title":"8) Success Criteria"},{"location":"kore-brief/#9-next-steps","text":"Share Kore sandbox/API docs (KYC/escrow/TA). Map webhook fields to contract calls (finalize allowlist/mint for CF). Schedule 30-min integration call \u2192 sandbox test. Convert demo to pilot . Contact: Lester Sawyer \u2014 contact@rblockshareholdings.com Partner docs (Dropbox Transfer): https://www.dropbox.com/t/lVexN5iA8HqklaJ5","title":"9) Next Steps"},{"location":"kore-ui-integration/","text":"Kore / North Capital UI Integration Context: R. Block Nation integrates regulated onboarding (KYC/AML, escrow, transfer agent) with on-chain offerings: - RBCB (Reg CF) \u2014 equity (Class B) token with 12-month lockup. - BFTKN (Reg A+/D) \u2014 issuer-backed token with funding window + optional . We support two UI paths : Option A \u2014 Hosted UI (fastest) Use Kore (hosted) or BD-hosted portals for investor onboarding + payments. Our site deep-links into their flow, then handles on-chain updates via secure webhooks. Pros: Fastest, lowest ops. Cons: Less brand control. Option B \u2014 Embedded / Custom UI (SettleMint ATK) Customize SettleMint\u2019s Asset Tokenization Kit (Next.js/Tailwind) and call Kore/NC APIs from our backend for KYC/escrow. Full first-party UX, keeps branding. Pros: Brand + extensibility. Cons: More front-end work. Contract Hooks (must implement) Apply to both OBN and BFTKN; names may differ by contract. 1) KYC Allowlist (pre-mint / pre-transfer) Off-chain KYC approves an address \u2192 we mark it on-chain. ```solidity // Event event WhitelistUpdated(address indexed investor, bool allowed); // Admin function (role-gated: onlyKoreOperator) function setWhitelisted(address investor, bool allowed) external;","title":"Kore/NC UI Integration"},{"location":"kore-ui-integration/#kore-north-capital-ui-integration","text":"Context: R. Block Nation integrates regulated onboarding (KYC/AML, escrow, transfer agent) with on-chain offerings: - RBCB (Reg CF) \u2014 equity (Class B) token with 12-month lockup. - BFTKN (Reg A+/D) \u2014 issuer-backed token with funding window + optional . We support two UI paths :","title":"Kore / North Capital UI Integration"},{"location":"kore-ui-integration/#option-a-hosted-ui-fastest","text":"Use Kore (hosted) or BD-hosted portals for investor onboarding + payments. Our site deep-links into their flow, then handles on-chain updates via secure webhooks. Pros: Fastest, lowest ops. Cons: Less brand control.","title":"Option A \u2014 Hosted UI (fastest)"},{"location":"kore-ui-integration/#option-b-embedded-custom-ui-settlemint-atk","text":"Customize SettleMint\u2019s Asset Tokenization Kit (Next.js/Tailwind) and call Kore/NC APIs from our backend for KYC/escrow. Full first-party UX, keeps branding. Pros: Brand + extensibility. Cons: More front-end work.","title":"Option B \u2014 Embedded / Custom UI (SettleMint ATK)"},{"location":"kore-ui-integration/#contract-hooks-must-implement","text":"Apply to both OBN and BFTKN; names may differ by contract.","title":"Contract Hooks (must implement)"},{"location":"kore-ui-integration/#1-kyc-allowlist-pre-mint-pre-transfer","text":"Off-chain KYC approves an address \u2192 we mark it on-chain. ```solidity // Event event WhitelistUpdated(address indexed investor, bool allowed); // Admin function (role-gated: onlyKoreOperator) function setWhitelisted(address investor, bool allowed) external;","title":"1) KYC Allowlist (pre-mint / pre-transfer)"},{"location":"roles-matrix/","text":"Roles & Responsibilities \u2014 SettleMint \u00d7 Kore \u00d7 Funding Portal This page clarifies who does what across the stack. It also shows the on-chain pattern we\u2019ll use regardless of UI choice. Matrix Function SettleMint Kore (hosted UI) Funding Portal Token issuance / smart contracts \u2705 \u2014 \u2014 Cap table / Transfer Agent \u2014 \u2705 \u2014 KYC/AML \u2014 \u2705 \u2705 (oversight if FP involved) Form C filing (Reg CF) \u2014 \u2014 \u2705 Escrow / funds flow \u2014 \u2705 (rails) \u2705 (if FP is intermediary) UI & investor experience \u2014 \u2705 \u2014 (FP has its own portal) Legal compliance (Reg CF) \u2014 \u2014 \u2705 On-chain pattern (both paths): Webhooks \u2192 backend \u2192 contract - Allowlist (BFTKN) before mint/transfer - Mint/release after escrow.settled - Reg CF lockups enforced in contract (OBN) Default setup for R. Block Nation (recommended) 1) Reg CF (Phase 1) - Funding Portal handles Form C , escrow, and compliance. - Kore optional as Transfer Agent and/or KYC/AML if FP supports it. - SettleMint powers the token contracts (OBN/BFTKN) and deployment. - Flow: FP/Kore webhook \u2192 backend \u2192 on-chain allowlist + mint \u2192 tx-ref logged. 2) Reg A+ / Reg D (Phase 2) - Keep SettleMint (contracts/deploy). - Use Kore (TA + KYC/AML + escrow rails). - Optional embedded UI (SettleMint ATK + Kore APIs) for first-party UX. Alternative: Kore\u2019s hosted investor UI If you skip FP for CF and use Kore\u2019s hosted UI : Kore runs the investor onboarding and payments. You deep-link into Kore; upon kyc.approved / escrow.settled , your backend executes on-chain updates. Legal Form C filing still requires a registered Reg CF Funding Portal (or an intermediary arrangement). References Verified OBN (Sepolia): https://sepolia.etherscan.io/address/0x769780C2BA4492Ac4B0C3C38fbD0B2CB4bb9Ba5f#code Repo: https://github.com/LesKemVal/R.BlockShares Partner ZIP: https://www.dropbox.com/scl/fi/03hu6guqq490wh0w0mloy/site-partner.zip?dl=0 Contact: Lester Sawyer \u2014 contact@rblockshareholdings.com","title":"Roles & Responsibilities"},{"location":"roles-matrix/#roles-responsibilities-settlemint-kore-funding-portal","text":"This page clarifies who does what across the stack. It also shows the on-chain pattern we\u2019ll use regardless of UI choice.","title":"Roles &amp; Responsibilities \u2014 SettleMint \u00d7 Kore \u00d7 Funding Portal"},{"location":"roles-matrix/#matrix","text":"Function SettleMint Kore (hosted UI) Funding Portal Token issuance / smart contracts \u2705 \u2014 \u2014 Cap table / Transfer Agent \u2014 \u2705 \u2014 KYC/AML \u2014 \u2705 \u2705 (oversight if FP involved) Form C filing (Reg CF) \u2014 \u2014 \u2705 Escrow / funds flow \u2014 \u2705 (rails) \u2705 (if FP is intermediary) UI & investor experience \u2014 \u2705 \u2014 (FP has its own portal) Legal compliance (Reg CF) \u2014 \u2014 \u2705 On-chain pattern (both paths): Webhooks \u2192 backend \u2192 contract - Allowlist (BFTKN) before mint/transfer - Mint/release after escrow.settled - Reg CF lockups enforced in contract (OBN)","title":"Matrix"},{"location":"roles-matrix/#default-setup-for-r-block-nation-recommended","text":"1) Reg CF (Phase 1) - Funding Portal handles Form C , escrow, and compliance. - Kore optional as Transfer Agent and/or KYC/AML if FP supports it. - SettleMint powers the token contracts (OBN/BFTKN) and deployment. - Flow: FP/Kore webhook \u2192 backend \u2192 on-chain allowlist + mint \u2192 tx-ref logged. 2) Reg A+ / Reg D (Phase 2) - Keep SettleMint (contracts/deploy). - Use Kore (TA + KYC/AML + escrow rails). - Optional embedded UI (SettleMint ATK + Kore APIs) for first-party UX.","title":"Default setup for R. Block Nation (recommended)"},{"location":"roles-matrix/#alternative-kores-hosted-investor-ui","text":"If you skip FP for CF and use Kore\u2019s hosted UI : Kore runs the investor onboarding and payments. You deep-link into Kore; upon kyc.approved / escrow.settled , your backend executes on-chain updates. Legal Form C filing still requires a registered Reg CF Funding Portal (or an intermediary arrangement).","title":"Alternative: Kore\u2019s hosted investor UI"},{"location":"roles-matrix/#references","text":"Verified OBN (Sepolia): https://sepolia.etherscan.io/address/0x769780C2BA4492Ac4B0C3C38fbD0B2CB4bb9Ba5f#code Repo: https://github.com/LesKemVal/R.BlockShares Partner ZIP: https://www.dropbox.com/scl/fi/03hu6guqq490wh0w0mloy/site-partner.zip?dl=0 Contact: Lester Sawyer \u2014 contact@rblockshareholdings.com","title":"References"},{"location":"subgraph/","text":"Subgraph Usage Deploy your subgraph To index your smart contract events, use The Graph middleware. First, edit subgraph.config.json to set the addresses of your smart contracts. You can find them in the deployment folder created under ignation . Then, run: bunx settlemint login This logs you in to the platform. This command only needs to be run once, so you can skip it if you've already logged in. Then, run: bunx settlemint scs subgraph deploy Help To get info about the tasks, run: bunx settlemint scs subgraph --help","title":"Subgraph Usage"},{"location":"subgraph/#subgraph-usage","text":"","title":"Subgraph Usage"},{"location":"subgraph/#deploy-your-subgraph","text":"To index your smart contract events, use The Graph middleware. First, edit subgraph.config.json to set the addresses of your smart contracts. You can find them in the deployment folder created under ignation . Then, run: bunx settlemint login This logs you in to the platform. This command only needs to be run once, so you can skip it if you've already logged in. Then, run: bunx settlemint scs subgraph deploy","title":"Deploy your subgraph"},{"location":"subgraph/#help","text":"To get info about the tasks, run: bunx settlemint scs subgraph --help","title":"Help"}]}