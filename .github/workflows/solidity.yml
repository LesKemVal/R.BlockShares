name: Solidity

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  id-token: write
  issues: write
  discussions: write
  packages: write
  pages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

jobs:
  test:
    name: Build Set
    runs-on: namespace-profile-btp-scs

    services:
      foundry:
        image: ghcr.io/settlemint/btp-anvil-test-node:latest
        ports:
          - "8545:8545"

    steps:
      - name: Setup 1Password
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

      - name: Load secrets
        uses: 1password/load-secrets-action@v2
        env:
          NPM_TOKEN: op://platform/npmjs/credential
          PAT_TOKEN: op://platform/github-commit-pat/credential

      - name: Checkout
        uses: namespacelabs/nscloud-checkout-action@v7
        with:
          token: ${{ env.PAT_TOKEN }}

      - name: Setup caches
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ./node_modules
            ~/.npm
            ~/.bun/install/cache

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Node dependencies
        run: npm install

      - name: Run Forge build
        run: |
          forge --version
          forge build --sizes

      - name: Run Hardhat build
        run: npx hardhat compile

      - name: Run Forge tests
        run: forge test -vvv

      - name: Run Hardhat tests
        run: npx hardhat test

      - name: Package version
        id: package-version
        env:
          # Use the full SHA from GitHub context; we'll slice it in bash
          GITHUB_SHA_FULL: ${{ github.sha }}
        run: |
          set -euo pipefail
          OLD_VERSION=$(jq -r '.version' package.json)
          echo "Old version: $OLD_VERSION"
          SHORT_SHA=${GITHUB_SHA_FULL:0:7}

          if [[ "$GITHUB_REF_NAME" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION="${GITHUB_REF_NAME#v}"
            echo "TAG=latest" >> $GITHUB_ENV
          elif [[ "$GITHUB_REF_NAME" == "main" ]]; then
            VERSION="${OLD_VERSION}-main${SHORT_SHA}"
            echo "TAG=main" >> $GITHUB_ENV
          else
            VERSION="${OLD_VERSION}-pr${SHORT_SHA}"
            echo "TAG=pr" >> $GITHUB_ENV
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "New version: $VERSION"
          jq --arg version "$VERSION" '.version = $version' package.json > package.json.tmp && mv package.json.tmp package.json

      - name: Publish to npm
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ env.NPM_TOKEN }}
          package: ./package.json
          access: public
          provenance: false
          strategy: all
          tag: ${{ env.TAG }}

      - name: Auto-commit version bump
        if: env.TAG == 'latest'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update package versions [skip ci]"
          branch: main
          file_pattern: "package.json README.md"

